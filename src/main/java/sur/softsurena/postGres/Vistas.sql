CREATE VIEW V_ANALISIS (ID, ID_PACIENTE, FECHA_HORA_CREADA, FECHA_HORA_VISTA, 
     T_BHCG, T_EMB_ORINA, T_EMB_SANGRE, T_ANT_AUSTRALIANO_BBSAG, 
     T_CLAMIDIA_IGA, T_FTA_ABS, T_HIV, T_VDRL, T_ACIDO_URICO, T_ANT_FEBRILES, 
     T_ASO_LATEX, T_BILIRRUBINA, T_COLESTEROL_TOTAL, T_COLESTEROL_HDL, 
     T_COLESTEROL_HDL_LDL, T_COPROLOGICO, T_CREATININA_SUERO, 
     T_CULTIVO_FARINGE, T_CULTIVO_HECES, T_CULTIVO_HERIDA_AEROBICO, 
     T_CULTIVO_OIDO, T_CULTIVO_SANGRE, T_CULTIVO_SEMEN, T_CULTIVO_URETRA, 
     T_CULTIVO_VAGINA, T_ELECTRO_HEMOGLOBINA, T_ERITROSEDIMENTACION, 
     T_ESPERMATOGRAMA, T_ESTRADIOL, T_ESTROGENO_TOTALES, T_FACTOR_REUMATOIDE, 
     T_FALCEMIA, T_FOSFATASA_ALCALINA, T_FSH, T_GLICEMIA, 
     T_HEMOGLO_GLUCOSILADA, T_HEMOGRAMA, T_HEPATITIS_A, T_HEPATITIS_C, T_KOH, 
     T_LH, T_ORINA, T_PCR, T_PROGESTERONA, T_PROLACTINA, T_PROTEINAS_TOTALES, 
     T_PSA_TOTAL, T_PSA_LIBRE, T_SANG_OCULT_HECES, T_SGOT_TGO, T_SGOT_TGP, 
     T_T3, T_T4, T_T4_LIBRE, T_COOMBS_DIRECTO, T_COOMBS_INDIRECTO, 
     T_TESTOSTERONA, T_TIPIFICACION_SANGUINEA, T_TOXOPLAS_IGG, T_TOXOPLAS_IGM, 
     T_TRIGLICERIDOS, T_TSH, T_TUBERCULINA, T_UREA, OTROS, IDUSUARIO, ROL)
AS SELECT r.ID, r.ID_PACIENTE, r.FECHA_HORA_CREADA, r.FECHA_HORA_VISTA,
     r.T_BHCG, r.T_EMB_ORINA, r.T_EMB_SANGRE, r.T_ANT_AUSTRALIANO_BBSAG,
     r.T_CLAMIDIA_IGA, r.T_FTA_ABS, r.T_HIV, r.T_VDRL, r.T_ACIDO_URICO,
     r.T_ANT_FEBRILES, r.T_ASO_LATEX, r.T_BILIRRUBINA, r.T_COLESTEROL_TOTAL,
     r.T_COLESTEROL_HDL, r.T_COLESTEROL_HDL_LDL, r.T_COPROLOGICO,
     r.T_CREATININA_SUERO, r.T_CULTIVO_FARINGE, r.T_CULTIVO_HECES,
     r.T_CULTIVO_HERIDA_AEROBICO, r.T_CULTIVO_OIDO, r.T_CULTIVO_SANGRE,
     r.T_CULTIVO_SEMEN, r.T_CULTIVO_URETRA, r.T_CULTIVO_VAGINA,
     r.T_ELECTRO_HEMOGLOBINA, r.T_ERITROSEDIMENTACION, r.T_ESPERMATOGRAMA,
     r.T_ESTRADIOL, r.T_ESTROGENO_TOTALES, r.T_FACTOR_REUMATOIDE, r.T_FALCEMIA,
     r.T_FOSFATASA_ALCALINA, r.T_FSH, r.T_GLICEMIA, r.T_HEMOGLO_GLUCOSILADA,
     r.T_HEMOGRAMA, r.T_HEPATITIS_A, r.T_HEPATITIS_C, r.T_KOH, r.T_LH,
     r.T_ORINA, r.T_PCR, r.T_PROGESTERONA, r.T_PROLACTINA,
     r.T_PROTEINAS_TOTALES, r.T_PSA_TOTAL, r.T_PSA_LIBRE, r.T_SANG_OCULT_HECES,
     r.T_SGOT_TGO, r.T_SGOT_TGP, r.T_T3, r.T_T4, r.T_T4_LIBRE,
     r.T_COOMBS_DIRECTO, r.T_COOMBS_INDIRECTO, r.T_TESTOSTERONA,
     r.T_TIPIFICACION_SANGUINEA, r.T_TOXOPLAS_IGG, r.T_TOXOPLAS_IGM,
     r.T_TRIGLICERIDOS, r.T_TSH, r.T_TUBERCULINA, r.T_UREA, r.OTROS, r.IDUSUARIO,
     r.ROL
FROM ANALISIS r;

CREATE VIEW V_ANTECEDENTES (ID, ID_PACIENTE, ID_DOCTOR, FECHA, DESCRIPCION, 
     USUARIO, ROL)
AS SELECT r.ID, r.ID_PACIENTE, r.ID_DOCTOR, r.FECHA, r.DESCRIPCION, r.USUARIO, r.ROL
FROM ANTECEDENTES r;

CREATE VIEW V_ARS (ID, DESCRIPCION, COVERCONSULTAPORC, IDUSUARIO, ROL, ESTADO)
AS SELECT r.ID, r.DESCRIPCION, r.COVERCONSULTAPORC, r.IDUSUARIO, r.ROL, r.ESTADO
FROM ARS r;

CREATE VIEW V_ASEGURADOS (ID, ID_PERSONA, ID_ARS, NO_NSS)
AS SELECT r.ID, r.ID_PERSONA, r.ID_ARS, r.NO_NSS
FROM ASEGURADOS r;

CREATE VIEW V_CATEGORIAS (ID, DESCRIPCION, IMAGEN_TEXTO, FECHA_CREACION, 
     ESTADO, IDUSUARIO)
AS SELECT r.ID, r.DESCRIPCION, r.IMAGEN_TEXTO, r.FECHA_CREACION, r.ESTADO, r.IDUSUARIO
FROM CATEGORIAS r;

CREATE VIEW V_CLIENTES (ID)
AS SELECT ID
FROM CLIENTES;

CREATE VIEW V_CODIGOS_POSTALES (ID, IDPROVINCIA, LOCALIDAD, CODIGO_POSTAL)
AS SELECT r.ID, r.IDPROVINCIA, r.LOCALIDAD, r.CODIGO_POSTAL
FROM CODIGOS_POSTALES r;

CREATE VIEW V_CONSULTAS (ID, ID_PACIENTE, ID_MOTIVO_CONSULTA, 
     ID_CONTROL_CONSULTA, FECHA, TURNO, ESTADO, IDUSUARIO)
AS SELECT r.ID, r.ID_PACIENTE, r.ID_MOTIVO_CONSULTA, r.ID_CONTROL_CONSULTA, 
          r.FECHA, r.TURNO, r.ESTADO,r.IDUSUARIO
FROM CONSULTAS r;

CREATE VIEW V_CONSULTAS_APROBADAS (ID, COD_AUTORIZACION, COSTO, DESCUENTO, 
     IDUSUARIO, TOTALCOSTO)
AS SELECT r.ID, r.COD_AUTORIZACION, r.COSTO, r.DESCUENTO, r.IDUSUARIO, r.TOTALCOSTO
FROM CONSULTAS_APROBADAS r;

CREATE VIEW V_CONTACTS_EMAIL (ID, ID_PERSONA, EMAIL, FECHA)
AS SELECT r.ID, r.ID_PERSONA, r.EMAIL, R.FECHA
FROM CONTACTOS_EMAIL r;
CREATE VIEW V_CONTACTS_TEL (ID, ID_PERSONA, TELEFONO, TIPO, FECHA)
AS SELECT r.ID, r.ID_PERSONA, r.TELEFONO, r.TIPO, r.FECHA
FROM CONTACTOS_TEL r;
CREATE VIEW V_CONTROL_CONSULTA (ID, USER_NAME, CANTIDAD_PACIENTE, DIA, INICIAL, 
     FINAL, IDUSUARIO, ESTADO)
AS SELECT r.ID, r.USER_NAME, r.CANTIDADPACIENTE, r.DIA, r.INICIAL, r.FINAL, r.IDUSUARIO, r.ESTADO
FROM CONTROL_CONSULTA r;
CREATE VIEW V_DATOS_NACIMIENTO (ID, PESONACIMIENTOKG, ALTURA, 
     PERIMETRO_CEFALICO, CESAREA, TIEMPOGESTACION, MC, IDUSUARIO)
AS SELECT r.ID, r.PESONACIMIENTOKG, r.ALTURA, r.PERIMETRO_CEFALICO, r.CESAREA, r.TIEMPOGESTACION, r.MC, r.IDUSUARIO
FROM DATOS_NACIMIENTO r;
CREATE VIEW V_DEUDAS (ID, ID_PERSONA, ID_FACTURA, CONCEPTO, MONTO, FECHA, HORA, 
     ESTADO)
AS SELECT r.ID, r.ID_PERSONA, r.ID_FACTURA, r.CONCEPTO, r.MONTO,r.FECHA, r.HORA,
          r.ESTADO
FROM DEUDAS r;
CREATE VIEW V_DIRECCIONES (ID, ID_PERSONA, ID_PROVINCIA, ID_MUNICIPIO, 
     ID_DISTRITO_MUNICIPAL, ID_CODIGO_POSTAL, DIRECCION, FECHA)
AS SELECT r.ID, r.ID_PERSONA, r.ID_PROVINCIA, r.ID_MUNICIPIO,
     r.ID_DISTRITO_MUNICIPAL, r.ID_CODIGO_POSTAL, r.DIRECCION, r.FECHA
FROM DIRECCIONES r;
CREATE VIEW V_DISTRITOS_MUNICIPALES (ID, NOMBRE, IDMUNICIPIO)
AS SELECT r.ID, r.NOMBRE, r.IDMUNICIPIO
FROM DISTRITOS_MUNICIPALES r;
CREATE VIEW V_D_DEUDAS_PAGAS (ID, ID_DEUDAS, MONTO_PAGO, FECHA_HORA)
AS SELECT r.ID, r.ID_DEUDAS, r.MONTO_PAGO, r.FECHA_HORA
FROM D_DEUDAS_PAGAS r;
CREATE VIEW V_D_FACTURAS (ID_FACTURA, ID_LINEA, ID_PRODUCTO, PRECIO, CANTIDAD)
AS SELECT r.ID_FACTURA, r.ID_LINEA, r.ID_PRODUCTO, r.PRECIO, r.CANTIDAD
FROM D_FACTURAS r;
CREATE VIEW V_D_GUIA_VIGILANCIA_DESARROLLO (ID_GVD, ID_PACIENTE, FECHA)
AS SELECT r.ID_GVD, r.ID_PACIENTE, r.FECHA
FROM D_GUIA_VIGILANCIA_DESARROLLO r;
CREATE VIEW V_D_MOTIVO_CONSULTA (IDCONSULTA, TURNO, IDMCONSULTA)
AS SELECT r.IDCONSULTA, r.TURNO, r.IDMCONSULTA
FROM D_MOTIVO_CONSULTA r;
CREATE VIEW V_D_RECETAS (ID_RECETA, LINEA, ID_MEDICAMENTO, CANTIDAD, D_DOSIS)
AS SELECT r.ID_RECETA, r.LINEA, r.ID_MEDICAMENTO, r.CANTIDAD, r.D_DOSIS
FROM D_RECETAS r;
CREATE VIEW V_ENTRADA_PRODUCTOS (ID, ID_PROVEDOR, COD_FACTURA, LINEA, 
     ID_PRODUCTO, ENTRADA, FECHAVECIMIENTO, ESTADO, USUARIO, ROL)
AS SELECT r.ID, r.IDPROVEDOR, r.COD_FACTURA, r.LINEA, r.IDPRODUCTO, r.ENTRADA,
     r.FECHAVECIMIENTO, r.ESTADO, r.USUARIO, r.ROL
FROM ENTRADA_PRODUCTOS r;
CREATE VIEW V_ESTUDIANTES (ID, MATRICULA, ID_PADRE, ID_MADRE, ID_TUTOR, 
     JCB_PARENTESCO)
AS SELECT r.ID, r.MATRICULA, r.ID_PADRE, r.ID_MADRE, r.ID_TUTOR, r.JCB_PARENTESCO
FROM ESTUDIANTE r;
CREATE VIEW V_E_S_SYS (ID_E_S_SYS, FCHI, FCHA, FCHV, IDMAC, LOGO)
AS SELECT r.ID_E_S_SYS, r.FCHI, r.FCHA, r.FCHV, r.IDMAC, r.LOGO
FROM E_S_SYS r;
CREATE VIEW V_FACTURAS (ID, ID_CLIENTE, ID_TURNO, EFECTIVO, CAMBIO, FECHA, 
     HORA, ESTADO_FACTURA, IDUSUARIO, NOMBRE_TEMP)
AS SELECT r.ID, r.ID_CLIENTE, r.IDTURNO, r.EFECTIVO, r.CAMBIO, r.FECHA, r.HORA, 
r.ESTADO_FACTURA, r.IDUSUARIO, r.NOMBRE_TEMP
FROM FACTURAS r;
CREATE VIEW V_FCH_LC (I, A, V, ID)
AS --Vista para ver los datos de la Tabla E_S_SYS y usando el procedimiento como funcion
SELECT CAST(i.FTCNUEVOTEXTO as D_VARCHAR_70) as i, 
        CAST(a.FTCNUEVOTEXTO as D_VARCHAR_70) as a, 
        CAST(v.FTCNUEVOTEXTO as D_VARCHAR_70) as v,
        CAST(id.FTCNUEVOTEXTO as D_VARCHAR_255) as id
FROM V_E_S_SYS r
    LEFT JOIN SYSTEM_ENCRIPTAR(TRIM(r.FCHI), 'D', '2972015','8661203') i
        on 1=1
    LEFT JOIN SYSTEM_ENCRIPTAR(TRIM(r.FCHA), 'D', '2972015','8661203') a
        on 1=1
    LEFT JOIN SYSTEM_ENCRIPTAR(TRIM(r.FCHV), 'D', '2972015','8661203') v
        on 1=1
    LEFT JOIN SYSTEM_ENCRIPTAR(TRIM(r.IDMAC), 'D', '2972015','8661203') id
        on 1=1;
CREATE VIEW V_GENERALES (ID_PERSONA, CEDULA, ID_TIPO_SANGRE, ESTADO_CIVIL)
AS SELECT r.ID_PERSONA, r.CEDULA, r.ID_TIPO_SANGRE, r.ESTADO_CIVIL
FROM GENERALES r;
CREATE VIEW V_GUIA_VIGILANCIA_DESARROLLO (ID, EDAD, CARACT_DESARR_EVALUAR)
AS SELECT r.ID, r.EDAD, r.CARACT_DESARR_EVALUAR
FROM GUIA_VIGILANCIA_DESARROLLO r;
CREATE VIEW V_HUELLAS (ID, TIPO_DEDO, IMAGEN_TEXTO)
AS SELECT ID, TIPO_DEDO, IMAGEN_TEXTO
FROM HUELLAS;
CREATE VIEW V_INSCRIPCION (ID, ID_ESTUDIANTE, ID_PADRE_TUTOR, ID_TANDA, PAGO, 
     FECHA_INSCRIPCION, IDUSUARIO)
AS SELECT r.ID, r.ID_ESTUDIANTE, r.ID_PADRE_TUTOR, r.ID_TANDA, r.PAGO,
     r.FECHA_INSCRIPCION, r.IDUSUARIO
FROM INSCRIPCION r;
CREATE VIEW V_MEDICAMENTOS (ID, ID_PROVEEDOR, DESCRIPCION, IMAGEN_TEXTO, 
     ESTADO, IDUSUARIO)
AS SELECT r.ID, r.ID_PROVEEDOR, r.DESCRIPCION, r.IMAGEN_TEXTO, r.ESTADO, r.IDUSUARIO
FROM MEDICAMENTOS r;
CREATE VIEW V_MENSAJES (ID, ID_DOCTOR, ID_PACIENTE, HORA, FECHA, MENSAJE, ESTADO
     )
AS SELECT r.ID, r.ID_DOCTOR, r.ID_PACIENTE, r.HORA, r.FECHA, r.MENSAJE, r.ESTADO
FROM MENSAJES r;
CREATE VIEW V_METRICAS (ID, IDCONSULTA, FECHA, PESOKG, ESTATURAMETRO, ESCEFALO, 
     NF_DETECT, HALLAZGOS_POS, ID_DIAG, TX, COMPLEMENTO, IMAGEN_TEXTO, IDUSUARIO
     )
AS SELECT r.ID, r.IDCONSULTA, r.FECHA, r.PESOKG, r.ESTATURAMETRO, r.ESCEFALO,
     r.ENF_DETECT, r.HALLAZGOS_POS, r.ID_DIAG, r.TX, r.COMPLEMENTO,
     r.IMAGEN_TEXTO, r.IDUSUARIO
FROM METRICAS r;
CREATE VIEW V_MOTIVO_CONSULTA (ID, DESCRIPCION)
AS SELECT r.ID, r.DESCRIPCION
FROM MOTIVO_CONSULTA r;
CREATE VIEW V_MUNICIPIOS (ID, NOMBRE, IDPROVINCIA)
AS SELECT r.ID, r.NOMBRE, r.IDPROVINCIA
FROM MUNICIPIOS r;
CREATE VIEW V_PACIENTES (ID, ID_MADRE, ID_PADRE)
AS SELECT r.ID, r.ID_MADRE, r.ID_PADRE
FROM PACIENTES r;
CREATE VIEW V_PADRES (ID)
AS SELECT r.ID
FROM PADRES r;
CREATE VIEW V_PERFILES (ID, USERNAME, ROL, CLIENTE_SELECT, CLIENTE_INSERT, 
     CLIENTE_UPDATE, CLIENTE_DELETE, CLIENTE_MODIFICAR_CEDULA, PRODUCTO_SELECT, 
     PRODUCTO_INSERT, PRODUCTO_UPDATE, PRODUCTO_DELETE, USUARIO_SELECT, 
     USUARIO_INSERT, USUARIO_UPDATE, USUARIO_DELETE, USUARIO_CAMBIO_CLAVE, 
     FACTURA_SELECT, FACTURA_INSERT, FACTURA_UPDATE, FACTURA_DELETE, 
     TURNO_SELECT, TURNO_INSERT, TURNO_UPDATE, TURNO_DELETE, DEUDAS_SELECT, 
     DEUDAS_INSERT, DEUDAS_UPDATE, DEUDAS_DELETE, REPORTES_SELECT, 
     INVENTARIOS_SELECT)
AS SELECT r.ID, r.USERNAME, r.ROL, 

     r.CLIENTE_SELECT, r.CLIENTE_INSERT, r.CLIENTE_UPDATE, r.CLIENTE_DELETE, 
     r.CLIENTE_MODIFICAR_CEDULA, 

     r.PRODUCTO_SELECT, r.PRODUCTO_INSERT, r.PRODUCTO_UPDATE, r.PRODUCTO_DELETE, 

     r.USUARIO_SELECT, r.USUARIO_INSERT, r.USUARIO_UPDATE, r.USUARIO_DELETE, 
     r.USUARIO_CAMBIO_CLAVE, 

     r.FACTURA_SELECT, r.FACTURA_INSERT, r.FACTURA_UPDATE, r.FACTURA_DELETE, 

     r.TURNO_SELECT, r.TURNO_INSERT, r.TURNO_UPDATE, r.TURNO_DELETE, 

     r.DEUDAS_SELECT, r.DEUDAS_INSERT, r.DEUDAS_UPDATE, r.DEUDAS_DELETE, 

     r.REPORTES_SELECT,
     
     r.INVENTARIOS_SELECT
FROM PERFILES r;
CREATE VIEW V_PERSONAS (ID, PERSONA, PNOMBRE, SNOMBRE, APELLIDOS, SEXO, 
     FECHA_NACIMIENTO, FECHA_INGRESO, FECHA_HORA_ULTIMO_UPDATE, ESTADO, 
     ID_USUARIO, ROL_USUARIO)
AS SELECT r.ID, r.PERSONA, r.PNOMBRE, r.SNOMBRE,
     r.APELLIDOS, r.SEXO, r.FECHA_NACIMIENTO, r.FECHA_INGRESO, 
     r.FECHA_HORA_ULTIMO_UPDATE, r.ESTADO, r.IDUSUARIO, r.ROL_USUARIO
FROM PERSONAS r;

CREATE VIEW V_PRODUCTOS (ID, IDCATEGORIA, CODIGO, DESCRIPCION, IMAGEN_TEXTO, 
     NOTA, FECHA_CREACION, ESTADO, IDUSUARIO, ROL)
AS SELECT r.ID, r.IDCATEGORIA, r.CODIGO, r.DESCRIPCION, r.IMAGEN_TEXTO, 
     r.NOTA, r.FECHA_CREACION, r.ESTADO, r.IDUSUARIO, r.ROL
FROM PRODUCTOS r;

CREATE VIEW V_PROVEEDORES (ID, CODIGO_PROVEEDOR)
AS SELECT r.ID, r.CODIGO_PROVEEDOR
FROM PROVEEDORES r;

CREATE VIEW V_PROVINCIAS (ID, NOMBRE, ZONA)
AS SELECT r.ID, r.NOMBRE, r.ZONA
FROM PROVINCIAS r;

CREATE VIEW V_RECCOUNT (ID, TABLA, CANTIDAD)
AS SELECT r.ID, r.TABLA, r.CANTIDAD
FROM RECCOUNT r;

CREATE VIEW V_RECETAS (ID, IDCONSULTA, FECHA, IDUSUARIO)
AS SELECT r.ID, r.IDCONSULTA, r.FECHA, r.IDUSUARIO
FROM RECETAS r;

CREATE VIEW V_SINTOMAS (ID, ID_PACIENTE, SINTOMAS, FECHA, HORA, NOTA, IDUSUARIO)
AS SELECT r.ID, r.ID_PACIENTE, r.SINTOMAS, r.FECHA, r.HORA, r.NOTA, r.IDUSUARIO
FROM SINTOMAS r;

CREATE VIEW V_TANDAS (ID, ANNO_INICIAL, ANNO_FINAL, HORA_INICIO, HORA_FINAL, 
     LUNES, MARTES, MIERCOLES, JUEVES, VIERNES, SABADOS, DOMINGOS, 
     CANTIDAD_ESTUDIANTES, EDAD_MINIMA, EDAD_MAXIMA, CON_EDAD, ESTADO)
AS SELECT r.ID, r.ANNO_INICIAL, r.ANNO_FINAL, r.HORA_INICIO, r.HORA_FINAL, r.LUNES,
     r.MARTES, r.MIERCOLES, r.JUEVES, r.VIERNES, r.SABADOS, r.DOMINGOS,
     r.CANTIDAD_ESTUDIANTES, r.EDAD_MINIMA, r.EDAD_MAXIMA, r.CON_EDAD, r.ESTADO
FROM TANDAS r;

CREATE VIEW V_TIME_LIC (D)
AS --Vista para obtener los dias que falta de la licencia...
SELECT (EXTRACT(doy from now()) - EXTRACT(doy from CAST(TRIM(s.FTCNUEVOTEXTO) as DATE))) as D
FROM E_S_SYS e
LEFT JOIN SYSTEM_ENCRIPTAR(e.FCHV, 'D', '2972015','8661203') s on 1=1;

CREATE VIEW V_TIPOS_SANGRE (ID, DESCRIPCION)
AS SELECT r.ID, r.DESCRIPCION
FROM TIPOS_SANGRE r;
CREATE VIEW V_TRANSACCION_ACTUAL (TNIDENTIFICADORTRANSACCION, 
     TNIDENTIFICADORCONEXION, TCESTADOTRANSACCION, TDFECHAHORA, 
     TNULTIMATRANSACCION, TNOLDESTINTERESTINGTRANSACTION, 
     TNOLDESTACTIVETRANSACTION, TCMODOAISLAMIENTO, TCTIEMPOESPERA, TCREADONLY, 
     TCAUTOCOMMIT, TCAUTOUNDO, TNIDENTIFICADORESTADISTICAS)
AS SELECT
   MON$TRANSACTION_ID             AS tnIdentificadorTransaccion,
   MON$ATTACHMENT_ID              AS tnIdentificadorConexion,
   IIF(MON$STATE = 1, 'ACTIVA', 'INACTIVA') AS tcEstadoTransaccion,
   MON$TIMESTAMP                  AS tdFechaHora,
   MON$TOP_TRANSACTION            AS tnUltimaTransaccion,
   MON$OLDEST_TRANSACTION         AS tnOldestInterestingTransaction,
   MON$OLDEST_ACTIVE              AS tnOldestActiveTransaction,
   DECODE(MON$ISOLATION_MODE, 
   0, 'Acceso exclusivo', 
   1, 'Lecturas repetidas', 
   2, 'Lee filas confirmadas inmediatamente', 
   3, 'No lee una fila si otra transacción la usa') AS tcModoAislamiento,
   DECODE(MON$LOCK_TIMEOUT, 
   -1, 'Espera por siempre', 
   0, 'No espera', 
   'Espera ' || MON$LOCK_TIMEOUT || ' segundos') AS tcTiempoEspera,
   IIF(MON$READ_ONLY = 1, 'Read Only', 'Read Write')               AS tcReadOnly,
   IIF(MON$AUTO_COMMIT = 1, 'Auto COMMIT', 'No auto COMMIT')       AS tcAutoCommit,
   IIF(MON$AUTO_UNDO = 1, 'Tiene savepoint', 'No tiene savepoint') AS tcAutoUndo,
   MON$STAT_ID                                                     AS tnIdentificadorEstadisticas
FROM
   MON$TRANSACTIONS
WHERE
   MON$ATTACHMENT_ID  = CURRENT_CONNECTION AND
   MON$TRANSACTION_ID = CURRENT_TRANSACTION;
CREATE VIEW V_TURNOS (ID, FECHAINICIO, HORAINICIO, FECHAFINAL, HORAFINAL, 
     ESTADO, IDUSUARIO, ROL)
AS SELECT r.ID, r.FECHAINICIO, r.HORAINICIO, r.FECHAFINAL, r.HORAFINAL, r.ESTADO, r.IDUSUARIO, r.ROL
FROM TURNOS r;


CREATE VIEW GET_CATEGORIA_ACTIVAS (ID, DESCRIPCION, IMAGEN_TEXTO)
AS select R.ID, R.DESCRIPCION, R.IMAGEN_TEXTO
from V_CATEGORIAS R
join V_PRODUCTOS P on R.ID = P.IDCATEGORIA and P.ESTADO
group by ID, DESCRIPCION, IMAGEN_TEXTO;

CREATE VIEW GET_CLIENTES (ID, ID_PROVINCIA, ID_MUNICIPIO, 
     ID_DISTRITO_MUNICIPAL, ID_CODIGO_POSTAL, ID_TIPO_SANGRE, PERSONA, CEDULA, 
     PNOMBRE, SNOMBRE, APELLIDOS, SEXO, DIRECCION, FECHA_NACIMIENTO, 
     FECHA_INGRESO, FECHA_HORA_ULTIMO_UPDATE, ESTADO, ESTADO_CIVIL, ID_USUARIO, 
     ROL_USUARIO)
AS SELECT r.ID, d.ID_PROVINCIA, d.ID_MUNICIPIO, d.ID_DISTRITO_MUNICIPAL, 
     d.ID_CODIGO_POSTAL, g.ID_TIPO_SANGRE, r.PERSONA, g.CEDULA, r.PNOMBRE, 
     r.SNOMBRE, r.APELLIDOS, r.SEXO, d.DIRECCION, r.FECHA_NACIMIENTO,
     r.FECHA_INGRESO, r.FECHA_HORA_ULTIMO_UPDATE, r.ESTADO, g.ESTADO_CIVIL,
     r.ID_USUARIO, r.ROL_USUARIO
FROM V_CLIENTES c 
INNER JOIN V_PERSONAS r ON r.ID = c.ID
INNER JOIN V_DIRECCIONES d ON d.ID_PERSONA = c.ID
INNER JOIN V_GENERALES g ON g.ID_PERSONA = c.ID;

CREATE VIEW GET_CLIENTES_ESTADO_SB (ID, CEDULA, ESTADO)
AS SELECT r.ID, g.CEDULA,  r.ESTADO
FROM V_CLIENTES c 
INNER JOIN V_PERSONAS r ON r.ID = c.ID
INNER JOIN V_GENERALES g ON g.ID_PERSONA = c.ID;

CREATE VIEW GET_CLIENTES_SB (ID, CEDULA, PERSONA, PNOMBRE, SNOMBRE, APELLIDOS, 
     SEXO, FECHA_NACIMIENTO, ESTADO_CIVIL, FECHA_INGRESO, ESTADO)
AS SELECT r.ID, g.CEDULA, r.PERSONA, r.PNOMBRE, r.SNOMBRE, r.APELLIDOS, r.SEXO,  
          r.FECHA_NACIMIENTO, g.ESTADO_CIVIL, r.FECHA_INGRESO, r.ESTADO
FROM V_CLIENTES c 
INNER JOIN V_PERSONAS r ON r.ID = c.ID
INNER JOIN V_GENERALES g ON g.ID_PERSONA = c.ID;

CREATE VIEW GET_DEUDAS (ID, ID_PERSONA, ID_FACTURA, CONCEPTO, MONTO, FECHA, 
     HORA, ESTADO, P_NOMBRE, S_NOMBRE, APELLIDOS, CEDULA)
AS SELECT r.ID, r.ID_PERSONA, r.ID_FACTURA, r.CONCEPTO, r.MONTO, r.FECHA, r.HORA,
     r.ESTADO, p.PNOMBRE, p.SNOMBRE, p.APELLIDOS, g.CEDULA
FROM V_DEUDAS r
INNER JOIN V_PERSONAS p ON p.ID = r.ID_PERSONA
INNER JOIN V_GENERALES g ON g.ID_PERSONA = r.ID_PERSONA
WHERE r.ESTADO IN('c', 'i', 'a', 't');

CREATE VIEW GET_DIRECCION_BY_ID (ID, ID_PERSONA, ID_PROVINCIA, PROVINCIA, 
     ID_MUNICIPIO, MUNICIPIO, ID_DISTRITO_MUNICIPAL, DISTRITO_MUNICIPAL, 
     ID_CODIGO_POSTAL, CODIGO_POSTAL, DIRECCION, FECHA)
AS SELECT r.ID, r.ID_PERSONA, 
     r.ID_PROVINCIA, p.NOMBRE, 
     r.ID_MUNICIPIO, m.NOMBRE,
     r.ID_DISTRITO_MUNICIPAL, d.NOMBRE, 
     r.ID_CODIGO_POSTAL, c.CODIGO_POSTAL, 
     r.DIRECCION, r.FECHA
FROM V_DIRECCIONES r
LEFT JOIN V_PROVINCIAS p ON p.ID = r.ID_PROVINCIA
LEFT JOIN V_MUNICIPIOS m ON m.ID = r.ID_MUNICIPIO
LEFT JOIN V_DISTRITOS_MUNICIPALES d ON d.ID = r.ID_DISTRITO_MUNICIPAL
LEFT JOIN V_CODIGOS_POSTALES c ON c.ID = r.ID_CODIGO_POSTAL;

CREATE VIEW GET_D_FACTURAS (ID_FACTURA, ID_LINEA, ID_PRODUCTO, DESCRIPCION, 
     PRECIO, CANTIDAD, TOTAL)
AS SELECT r.ID_FACTURA, r.ID_LINEA, r.ID_PRODUCTO, p.DESCRIPCION, r.PRECIO, r.CANTIDAD, (r.PRECIO * r.CANTIDAD) AS TOTAL
FROM V_D_FACTURAS r 
LEFT JOIN V_PRODUCTOS p ON p.ID = r.ID_PRODUCTO;

CREATE VIEW GET_ESTUDIANTES_SV (ID, MATRICULA, ID_PADRE, ID_MADRE, CEDULA, 
     PNOMBRE, SNOMBRE, APELLIDOS, SEXO, FECHA_NACIMIENTO, ESTADO)
AS SELECT r.ID, e.MATRICULA, e.ID_PADRE, e.ID_MADRE, g.CEDULA, r.PNOMBRE, r.SNOMBRE, 
     r.APELLIDOS, r.SEXO, r.FECHA_NACIMIENTO, r.ESTADO
FROM V_ESTUDIANTES e 
INNER JOIN V_PERSONAS r ON r.ID = e.ID
INNER JOIN V_GENERALES g ON g.ID_PERSONA = e.ID;

CREATE VIEW GET_PACIENTES (ID, ID_MADRE, ID_PADRE, ID_ARS, NONSS, 
     ID_TIPO_SANGRE, CEDULA, PNOMBRE, SNOMBRE, APELLIDOS, SEXO, 
     FECHA_NACIMIENTO, FECHA_INGRESO, FECHA_HORA_ULTIMO_UPDATE, ESTADO, 
     ID_USUARIO)
AS SELECT r.ID, r.ID_MADRE, r.ID_PADRE, a.ID_ARS, a.NO_NSS, g.ID_TIPO_SANGRE, 
     g.CEDULA, p.PNOMBRE, p.SNOMBRE, p.APELLIDOS, p.SEXO, p.FECHA_NACIMIENTO, 
     p.FECHA_INGRESO, p.FECHA_HORA_ULTIMO_UPDATE, p.ESTADO, p.ID_USUARIO
FROM V_PACIENTES r 
INNER JOIN V_PERSONAS p ON p.ID = r.ID
INNER JOIN V_ASEGURADOS a ON a.ID_PERSONA = r.ID
INNER JOIN V_GENERALES g ON g.ID_PERSONA = r.ID;

CREATE VIEW GET_PRIVILEGIOS (USER_NAME, CEDENTE, PRIVILEGIO, OPCION_PERMISO, 
     NOMBRE_RELACION, NOMBRE_CAMPO, TIPO_USUARIO, TIPO_OBJECTO)
AS SELECT r.RDB$USER, r.RDB$GRANTOR, r.RDB$PRIVILEGE, r.RDB$GRANT_OPTION, 
       r.RDB$RELATION_NAME, r.RDB$FIELD_NAME, r.RDB$USER_TYPE, r.RDB$OBJECT_TYPE
FROM RDB$USER_PRIVILEGES r;

CREATE VIEW GET_PRODUCTOS (ID, IDCATEGORIA, DESC_CATEGORIA, IMAGEN_CATEGORIA, 
     CODIGO, DESCRIPCION, IMAGEN_TEXTO, NOTA, FECHA_CREACION, ESTADO)
AS SELECT r.ID, r.IDCATEGORIA, c.DESCRIPCION, c.IMAGEN_TEXTO, r.CODIGO, 
       r.DESCRIPCION, r.IMAGEN_TEXTO, r.NOTA, r.FECHA_CREACION, r.ESTADO
FROM V_PRODUCTOS r
INNER JOIN V_CATEGORIAS c ON r.IDCATEGORIA = c.ID;

CREATE VIEW GET_ROL (USER_NAME, ROL)
AS SELECT UPPER(TRIM(p.RDB$USER)) AS USER_NAME, TRIM(p.RDB$RELATION_NAME) AS ROL
FROM RDB$USER_PRIVILEGES p
WHERE p.RDB$PRIVILEGE = 'M';

CREATE VIEW GET_ROLES (ROL)
AS select RDB$ROLE_NAME
from RDB$ROLES r
--iif(RDB$ROLE_NAME = 'RDB$ADMIN', 'RRR_ADMINISTRADOR', RDB$ROLE_NAME)
where trim(r.rdb$role_name) not like 'RRR_SOFTSURENA';

CREATE VIEW GET_TEMPORALES (ID_FACTURA, NOMBRE_TEMP, PNOMBRE, SNOMBRE, 
     APELLIDOS, FECHA, IDUSUARIO, HORA, ID_TURNO, EFECTIVO, CAMBIO, 
     ESTADO_FACTURA, MONTO, ID_CLIENTE)
AS SELECT f.ID, f.NOMBRE_TEMP, p.PNOMBRE, p.SNOMBRE, p.APELLIDOS, f.FECHA, 
     f.IDUSUARIO, f.HORA, f.ID_TURNO, f.EFECTIVO, f.CAMBIO, f.ESTADO_FACTURA,
          cast(sum((d.CANTIDAD * d.PRECIO )) as D_DINERO) as MONTO, f.ID_CLIENTE
FROM V_FACTURAS f     
LEFT JOIN V_CLIENTES c on c.ID = f.ID_CLIENTE 
LEFT JOIN V_PERSONAS p ON p.ID = f.ID_CLIENTE
LEFT JOIN V_D_FACTURAS d on d.ID_FACTURA = f.ID 
WHERE f.ESTADO_FACTURA = 't' 
GROUP by f.ID, f.NOMBRE_TEMP, p.PNOMBRE, p.SNOMBRE, p.APELLIDOS, f.FECHA, 
          f.IDUSUARIO, f.HORA, f.ID_TURNO, f.EFECTIVO, f.CAMBIO, f.ESTADO_FACTURA, f.ID_CLIENTE;
		  
CREATE VIEW GET_USER_ROLES (ROL, USER_NAME)
AS SELECT DISTINCT r.ROL, p.O_USER_NAME
FROM GET_ROL r 
INNER JOIN SP_SELECT_USUARIOS_TAGS('all') p ON 1=1
where TRIM(r.USER_NAME) like TRIM(p.O_USER_NAME) AND 
r.ROL LIKE 'RRR_%' OR r.ROL LIKE 'RDB$ADMIN';